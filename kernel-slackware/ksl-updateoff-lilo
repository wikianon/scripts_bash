#!/bin/sh
##[Ficha: ]###############################################################################################
#                                                                                                        #
# [-] Autor..........: Jean Zonta                                                                        #
# [-] Pseudonym......: wiki.anon                                                                         #
# [-] Os destination.: Slackware family                                                                  #
# [-] Script Name....: ksl-updateoff-lilo                                                                #
# [-] Create day.....: Qua Jan 10 14:30:00 2018                                                          #
# [-] Last Update....: Sex Apr 10 18:38:20 2020                                                          #
# [-] License........: GNU/GPL V3+                                                                       #
# [-] Script Version.: 0.0.2                                                                             #
#                                                                                                        #
##[Install script in default dir package: ]###############################################################
#                                                                                                        #
# [-] kernel/ksl-updateoff-lilo                                                                          #
# [-] wiki.anon[../Configs]# bash kernel/ksl-updateoff-lilo                                              #
#                                                                                                        #
##[e-mail: ]##############################################################################################
#                                                                                                        #
# [-] echo "ykmk0cpqpB{cjqq0eqo0dt" | perl -pe \ 's/(.)/chr(ord($1)-2*1)/ge'                             #
# [-] echo 'comhttps://slackwarewww' | sed 's@\(com\)\(https://\)\(slackware\)\(www\)@\2\4.\3.\1 ..!!!@' #
#                                                                                                        #
##########################################################################################################
# Section verify Root Systems (U|Li)n(i|u)x begins
if [ $(id -u) -ne 0 ]; then
 echo -e "\n\033[1;31mYou must be root\033[1;32m!\033[0m\n"
  else

case "$(uname -m)" in
  x86_64|e*) ARCH=".x64" ;;  #Downloads para arquitetura x86_64 e processadores x64 / EM64T:
   i?86|x86) ARCH=".i586" ;; #Downloads para arquitetura x86, i386, i486, i586 e i686
          *) ARCH="" ;;
esac

FSTAB=${FSTAB:-/etc/fstab}

LILO=${LILO:-/etc/lilo.conf}

SLILO=${SLILO:-$(which lilo)}

LIBMODULES=${LIBMODULES:-/lib/modules}

MKINITRD=${MKINITRD:-$(which mkinitrd)}

MKINITRDCOMMAND=${MKINITRDCOMMAND:-/usr/share/mkinitrd/mkinitrd_command_generator.sh}

#mkinitrd -c -k $(uname -r) -f ext{1,2,3,4}  -r /dev/sda{1,2,3,4} -m ${MKINITRDSTRINGS} -u -o /boot/initrd.gz
MKINITRDSTRINGS=${MKINITRDSTRINGS:-$(${MKINITRDCOMMAND} | grep ^mkinitrd | cut -f10 -d' ')}

DEVDISK=${DEVDISK:-$(cat ${FSTAB} | tr '\t' ' ' | grep -v '^ *#' | tr -s ' ' | grep ' / ' | cut -f1 -d' ')}

SYSARQ=${SYSARQ:-$(file -s ${DEVDISK} | awk '{print $5}')}

#Pega o numero da linha  # End LILO global section
LINE=${LINE:-$(cat -n ${LILO} | grep "# End LILO global section" | awk '{print $1}')}

# Variavel que pega a versãoo dos pacotes
UPVERSION=${UPVERSION:-$(ls -1 /boot/vmlinuz-generic-$(uname -r) 2> /dev/null)}
UPVERSION=${UPVERSION/*\/*-}

# Váriaveis kernel huge
HUGE_VM=${HUGE_VM:-/boot/vmlinuz-huge-${UPVERSION}}
HUGE_VM_LNK=${HUGE_VM_LNK:-/boot/vmlinuz_huge-${UPVERSION}}
ln -vs ${HUGE_VM} ${HUGE_VM_LNK}
if [ $? -eq 0 ]; then
 rm -v /boot/{vmlinuz,vmlinuz-huge} 2> /dev/null
 sed -i "/# Linux bootable partition config begins/ s/# Linux bootable.*/# Linux ${UPVERSION} bootable huge partition config begins/g;
         /image = \/boot\/vmlinuz/ s/$/_huge-${UPVERSION}/g;
         /# Linux bootable partition config ends/ s/# Linux bootable.*/# Linux ${UPVERSION} bootable huge partition config ends/g;" ${LILO}
fi

HUGE_MAP=${HUGE_MAP:-/boot/System.map-huge-${UPVERSION}}
HUGE_MAP_LNK=${HUGE_MAP_LNK:-/boot/sysmap_huge-${UPVERSION}}
if ! [ -f "${HUGE_MAP}" ]; then
 echo -e "\033[1;31mNot\033[1;37m, \033[1;31mfound it \033[1;32m${HUGE_MAP}\033[1;31m!\033[0m"
  else
   echo -e "\033[1;35mAh\033[1;37m, \033[1;35mfound it \033[1;32m${HUGE_MAP}\033[1;31m!\033[0m"
    rm -v ${HUGE_MAP%%-*} ${HUGE_MAP%-*}
     ln -vs ${HUGE_MAP} ${HUGE_MAP_LNK}
      fi
      
HUGE_CONFIG=${HUGE_CONFIG:-/boot/config-huge-${UPVERSION}${ARCH}}
HUGE_CONFIG_LNK=${HUGE_CONFIG_LNK:-/boot/config_huge-${UPVERSION}${ARCH}}
if ! [ -f "${HUGE_CONFIG}" ]; then
 echo -e "\033[1;31mNot\033[1;37m, \033[1;31mfound it \033[1;32m${HUGE_CONFIG}\033[1;31m!\033[0m"
  else
   echo -e "\033[1;35mAh\033[1;37m, \033[1;35mfound it \033[1;32m${HUGE_CONFIG}\033[1;31m!\033[0m"
    rm -v ${HUGE_CONFIG%%-*} ${HUGE_CONFIG%-*}
     ln -vs ${HUGE_CONFIG} ${HUGE_CONFIG_LNK}
      fi

# Váriaveis kernel generic
GENERIC_VM=${GENERIC_VM:-/boot/vmlinuz-generic-${UPVERSION}}
GENERIC_VM_LNK=${GENERIC_VM_LNK:-/boot/vmlinuz_generic-${UPVERSION}}
if ! [ -f "${GENERIC_VM}" ]; then
 echo -e "\033[1;31mNot\033[1;37m, \033[1;31mfound it \033[1;32m${GENERIC_VM}\033[1;31m!\033[0m"
  else
   echo -e "\033[1;35mAh\033[1;37m, \033[1;35mfound it \033[1;32m${GENERIC_VM}\033[1;31m!\033[0m"
    rm -v ${GENERIC_VM%%-*} ${GENERIC_VM%-*}
     ln -vs ${GENERIC_VM} ${GENERIC_VM_LNK}
      fi

GENERIC_CONFIG=${GENERIC_CONFIG:-/boot/config-generic-${UPVERSION}${ARCH}}
GENERIC_CONFIG_LNK=${GENERIC_CONFIG_LNK:-/boot/config_generic-${UPVERSION}${ARCH}}
if ! [ -f "${GENERIC_CONFIG}" ]; then
 echo -e "\033[1;31mNot\033[1;37m, \033[1;31mfound it \033[1;32m${GENERIC_CONFIG}\033[1;31m!\033[0m"
  else
   echo -e "\033[1;35mAh\033[1;37m, \033[1;35mfound it \033[1;32m${GENERIC_CONFIG}\033[1;31m!\033[0m"
    rm -v ${GENERIC_CONFIG%%-*} ${GENERIC_CONFIG%-*}
     ln -vs ${GENERIC_CONFIG} ${GENERIC_CONFIG_LNK}
      fi

GENERIC_MAP=${GENERIC_MAP:-/boot/System.map-generic-${UPVERSION}}
GENERIC_MAP_LNK=${GENERIC_MAP_LNK:-/boot/sysmap_generic-${UPVERSION}}
if ! [ -f "${GENERIC_MAP}" ]; then
 echo -e "\033[1;31mNot\033[1;37m, \033[1;31mfound it \033[1;32m${GENERIC_MAP}\033[1;31m!\033[0m"
  else
   echo -e "\033[1;35mAh\033[1;37m, \033[1;35mfound it \033[1;32m${GENERIC_MAP}\033[1;31m!\033[0m"
    rm -v ${GENERIC_MAP%%-*} ${GENERIC_MAP%-*}
     ln -vs ${GENERIC_MAP} ${GENERIC_MAP_LNK}
      fi

# Begin config initrd kernel generic
GENERIC_INITRD=${GENERIC_INITRD:-/boot/initrd-generic-${UPVERSION}}
GENERIC_INITRD_LNK=${GENERIC_INITRD_LNK:-/boot/initrd_generic-${UPVERSION}}

${MKINITRD} -c -k ${UPVERSION} -f ${SYSARQ} -r ${DEVDISK} -m ${MKINITRDSTRINGS} -u -o ${GENERIC_INITRD}
ln -vs ${GENERIC_INITRD} ${GENERIC_INITRD_LNK}
# End config initrd kernel generic

echo -ne "\n\033[1;35mDo you want to add \033[1;32ma\033[1;35m(\033[1;32mfter\033[1;35m) or at the \033[1;32me\033[1;35m(\033[1;32mnd\033[1;35m) of \033[1;36mlilo.conf\033[1;32m? \033[0m"
read updateoff
updateoff="$(echo ${updateoff} | tr A-Z a-z)" #lowercase

GENERIC_LABEL=${GENERIC_LABEL:-$(grep "GNRC-${UPVERSION}" ${LILO} 2> /dev/null)}

case "${updateoff}" in
'a')
  if [ -z "${GENERIC_LABEL}" -a -f "${GENERIC_VM_LNK}" ]; then
   ## Adiciona partição depois de "# End LILO global section" no lilo.conf
   sed -i "${LINE}s/$/\n# Linux ${UPVERSION} bootable generic partition config begins/g;
           ${LINE}s/$/\nimage  = ${GENERIC_VM_LNK//\//\\/}/g;
           ${LINE}s/$/\ninitrd = ${GENERIC_INITRD_LNK//\//\\/}/g;
           ${LINE}s/$/\nroot   = ${DEVDISK//\//\\/}/g;
           ${LINE}s/$/\nlabel  = GNRC-${UPVERSION}/g;
           ${LINE}s/$/\nread-only/g;
           ${LINE}s/$/\n# Linux ${UPVERSION} bootable generic partition config ends/g;
         " ${LILO}
   if ! [ -z "$(grep "vmlinuz_generic-${UPVERSION}" ${LILO})" ]; then
   echo -e "\n\033[1;36mKernel GNRC\033[1;33m-\033[1;32m${UPVERSION} \033[1;36minstall sucessfull\033[1;31m!\033[0m\n"
   fi
  fi
;;

'e')
  if [ -z "${GENERIC_LABEL}" -a -f "${GENERIC_VM_LNK}" ]; then
  ## Adiciona partição no fim de lilo.conf
echo "# Linux ${UPVERSION} bootable generic partition config begins
image  = ${GENERIC_VM_LNK}
initrd = ${GENERIC_INITRD_LNK}
root   = ${DEVDISK}
label  = GNRC-${UPVERSION}
read-only
# Linux ${UPVERSION} bootable generic partition config ends" >> ${LILO}
   if ! [ -z "$(grep "vmlinuz_generic-${UPVERSION}" ${LILO})" ]; then
   echo -e "\n\033[1;36mKernel GNRC\033[1;33m-\033[1;32m${UPVERSION} \033[1;36minstall sucessfull\033[1;31m!\033[0m\n"
   fi
  fi
;;
esac

#${SLILO} # exec /sbin/lilo

fi # Section verify Root Systems (U|Li)n(i|u)x ends